apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.fullname" . }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: request-port
              containerPort: {{ .Values.gateway.requestPort }}
              protocol: TCP
            - name: app-port
              containerPort: {{ .Values.gateway.appPort }}
              protocol: TCP
            - name: admin-port
              containerPort: {{ .Values.gateway.adminPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: admin-port
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: admin-port
          env:
            - name: REQUEST_PORT
              value: "{{ .Values.gateway.requestPort }}"
            - name: APP_PORT
              value: "{{ .Values.gateway.appPort }}"
            - name: ADMIN_PORT
              value: "{{ .Values.gateway.adminPort }}"
            - name: MYSQL_HOST
              value: {{ .Values.backendDatabase.host }}
            - name: MYSQL_PORT
              value: "{{ .Values.backendDatabase.port }}"
            - name: MYSQL_SCHEMA
              value: {{ .Values.backendDatabase.schema }}
            - name: MYSQL_USER
              value: {{ .Values.backendDatabase.user }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.backendDatabase.password }}
            - name: LOG_LEVEL
              value: {{ .Values.gateway.log.level }}
            - name: QUERY_HISTORY_SIZE
              value: "{{ .Values.gateway.queryHistorySize }}"
            - name: TLS_ENABLED
              value: {{ .Values.gateway.tls.enabled }}
            {{- if .Values.gateway.tls.enabled }}
            - name: KEYSTORE_PATH
              value: {{ .Values.gateway.tls.keystorePath }}
            - name: KEYSTORE_PASSWORD
              value: {{ .Values.gateway.tls.keystorePassword }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- range .Values.secretMounts }}
            - name: {{ .name }}
              mountPath: {{ .path }}
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
